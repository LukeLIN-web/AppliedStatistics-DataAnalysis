tmp <- integrate(sigmoid, lower = -2, upper = 2)
I <- tmp[[1]]
abs(I - I1000)
results = list(abs(I - I1000))
summary(results)
tmp <- integrate(sigmoid, lower = -2, upper = 2)
I <- tmp[[1]]
(I = 2*(1-exp(-2)))
abs(I - I1000)
results = list(abs(I - I1000))
summary(results)
for (k in 4:8){
x <- runif(10^k,-2,2)
y <- runif(10^k,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/10^k
I <- tmp[[1]]
print(abs(I - result))
results <- append(results, abs(I - result))
}
l =c(3:8)
myFun=function(x){10^x}
lis <- lapply(l,myFun)
a = as.vector(unlist(lis))
b = as.vector(unlist(results))
df <- data.frame(x=a, y=b)
plot(log(df$x), log(df$y), main='Log-Log Plot')
plot(3:8,log(df$y))
l =c(3:8)
myFun=function(x){10^x}
lis <- lapply(l,myFun)
a = as.vector(unlist(lis))
b = as.vector(unlist(results))
df <- data.frame(x=a, y=b)
plot(log(df$x), log(df$y), main='Log-Log Plot')
plot(3:8,log(results))
error = numeric(6)
for (k in 4:8){
N = 10^k
x <- runif(N,-2,2)
y <- runif(N,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/N
print(abs(I - result))
results <- append(results, abs(I - result))
error[N-1] = abs(2*(1-exp(-2))-result)
}
l =c(3:8)
myFun=function(x){10^x}
lis <- lapply(l,myFun)
a = as.vector(unlist(lis))
b = as.vector(unlist(results))
df <- data.frame(x=a, y=b)
#l =c(3:8)
#myFun=function(x){10^x}
#lis <- lapply(l,myFun)
#a = as.vector(unlist(lis))
#b = as.vector(unlist(results))
#df <- data.frame(x=a, y=b)
#plot(log(df$x), log(df$y), main='Log-Log Plot')
plot(3:8,log(error))
error = numeric(6)
for (k in 4:8){
N = 10^k
x <- runif(N,-2,2)
y <- runif(N,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/N
print(abs(I - result))
results <- append(results, abs(I - result))
error[n-1] = abs(2*(1-exp(-2))-result)
}
error = numeric(6)
for (k in 4:8){
N = 10^k
x <- runif(N,-2,2)
y <- runif(N,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/N
print(abs(I - result))
results <- append(results, abs(I - result))
error[k-1] = abs(2*(1-exp(-2))-result)
}
error = numeric(6)
for (k in 4:8){
N = 10^k
x <- runif(N,-2,2)
y <- runif(N,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/N
print(abs(I - result))
results <- append(results, abs(I - result))
error[k-3] = abs(2*(1-exp(-2))-result)
}
#l =c(3:8)
#myFun=function(x){10^x}
#lis <- lapply(l,myFun)
#a = as.vector(unlist(lis))
#b = as.vector(unlist(results))
#df <- data.frame(x=a, y=b)
#plot(log(df$x), log(df$y), main='Log-Log Plot')
plot(3:8,log(error))
help("t.test")
knitr::opts_chunk$set(echo = TRUE)
libaray(ISLR)
libraray(ISLR)
library(ISLR)
library(ISLR)
library(ISLR)
str(Auto)
library(ISLR)
str(Auto)
q2.df <- subset(Auto, select = c(mpg, origin))
str(q2.df)
library(ISLR)
str(Auto)
q2.df <- subset(Auto, select = c(mpg, origin))
str(q2.df)
boxplot(mpg ~ origin, data = q2.df, col = 'cornsilk2')
q2.df$fmpg <- cut(q2.df$mpg,c(0,20,35,50),labels = c('low','med','high'))
q2.df$origin <- factor(q2.df$origin, labels = c('Am','Eu','Jap'))
str(q2.df)
(q2.tbl <- with(q2.df, table(origin, fmpg)))
(q2.tbl <- with(q2.df, table(origin, fmpg)))
mosaicplot(q2.tbl,ylab = 'mpg' )
(q2.tbl <- with(q2.df, table(origin, fmpg)))
mosaicplot(q2.tbl,ylab = 'mpg' )
prop.table(q2.tbl,1)
help(prop.table)
(q2.tbl <- with(q2.df, table(origin, fmpg)))
mosaicplot(q2.tbl,ylab = 'mpg' )
prop.table(q2.tbl,2)
(q2.tbl <- with(q2.df, table(origin, fmpg)))
mosaicplot(q2.tbl,ylab = 'mpg' )
prop.table(q2.tbl,1) # 按行分
colSums(prop.table(q2.tbl))%*%t(rowSums(prop.table(q2.tbl))) *392
View(q2.df)
View(q2.df)
colSums(prop.table(q2.tbl))%*%t(rowSums(prop.table(q2.tbl))) *392
chisq.test(q2.tbl)
colSums(prop.table(q2.tbl))%*%t(rowSums(prop.table(q2.tbl))) *392
chisq.test(q2.tbl)
chisq.test(q2.tbl)$expected
colSums(prop.table(q2.tbl))%*%t(rowSums(prop.table(q2.tbl))) *392
chisq.test(q2.tbl)
chisq.test(q2.tbl)$expected
fisher.test(q2.tbl)
help(attach)
help(model.table)
knitr::opts_chunk$set(echo = TRUE)
library(psych)
path = "Human_data.txt"
human <- read.table(path,header = TRUE)
library(psych)
path = 'Human_data.txt'
human <- read.table(path,header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
BABIES = read.table("http://www.stat.berkeley.edu/users/statlabs/data/babies.data",header = TRUE)
CLEAN = subset(BABIES, bwt !=999 & gestation !=999 & parity != 9 & height != 99 & weight !=999 & smoke != 9)
BABIES = read.table("http://www.stat.berkeley.edu/users/statlabs/data/babies.data",header = TRUE)
CLEAN = subset(BABIES, bwt !=999 & gestation !=999 & parity != 9 & height != 99 & weight !=999 & smoke != 9)
smokemother = subset(CLEAN, smoke==1)
nosmokemother = subset(CLEAN, smoke==0)
par(mfcol=c(2,1))
hist(smokemother$bwt,col = 'azure2',xlab='ounces',xlim=c(50,180),  ylab='Freq',main = "smokemother birth weights of babies", prob= TRUE) # must have prob parameter for desity
lines(density(smokemother$bwt),col = "green")
hist(nosmokemother$bwt,col = 'azure2',xlab='ounces', xlim=c(50,180), ylab='Freq',main = "nosmokemother birth weights of babies",prob= TRUE)
lines(density(nosmokemother$bwt),col = "green")
smokemother = subset(CLEAN, smoke==1)
nosmokemother = subset(CLEAN, smoke==0)
par(mfcol=c(2,1))
hist(smokemother$bwt,col = 'azure2',xlab='ounces',xlim=c(50,180),  ylab='Freq',main = "smokemother birth weights of babies", prob= TRUE) # must have prob parameter for desity
lines(density(smokemother$bwt),col = "green")
hist(nosmokemother$bwt,col = 'azure2',xlab='ounces', xlim=c(50,180), ylab='Freq',main = "nosmokemother birth weights of babies",prob= TRUE)
lines(density(nosmokemother$bwt),col = "green")
#可以这么写 就不用提前subset了
#  hist(bwt[smoke==0], xlim=c(30, 180), xlab='birth weight (oz)', main='Non-smoking', freq = FALSE)
# lines(density(bwt[smoke==0]), col='red',lwd=2)
#hist(bwt[smoke==1], xlim=c(30, 180), xlab='birth weight (oz)',main='Smoking', freq = FALSE) lines(density(bwt[smoke==1]), col='red',lwd=2)
par(mfrow=c(1,1))
library(car)
dataq4 = read.csv("data_q4.csv")
knitr::opts_chunk$set(echo = TRUE)
dataset = read.table("hw4q1")
library(MASS)
pim = MASS::Pima.te
str(pim)
par(mfcol=c(2,1))
hist(pim$bp[pim$type=="Yes"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "diabetic  ", prob= TRUE)
hist(pim$bp[pim$type=="No"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "No diabetic  ", prob= TRUE)
library(MASS)
pim = MASS::Pima.te
str(pim)
par(mfcol=c(2,1))
hist(pim$bp[pim$type=="Yes"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "diabetic  ", prob= TRUE)
hist(pim$bp[pim$type=="No"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "No diabetic  ", prob= TRUE)
答案如下:
par(mfrow=c(2,1))
library(MASS)
pim = MASS::Pima.te
str(pim)
par(mfcol=c(2,1))
hist(pim$bp[pim$type=="Yes"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "diabetic  ", prob= TRUE)
hist(pim$bp[pim$type=="No"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "No diabetic  ", prob= TRUE)
#答案如下:
par(mfrow=c(2,1))
hist(bp.yes, xlim = c(20,120), ylim = c(0, 0.035), freq = F,
xlab = 'blood pressure', main = 'Diabetic Pima Women')
library(MASS)
pim = MASS::Pima.te
str(pim)
par(mfcol=c(2,1))
hist(pim$bp[pim$type=="Yes"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "diabetic  ", prob= TRUE)
hist(pim$bp[pim$type=="No"],col = 'azure2',xlab='diastolic blood pressure (mm Hg)',xlim=c(20,120),  ylab='Freq',main = "No diabetic  ", prob= TRUE)
#答案如下:
bp.yes <- Pima.te$bp[Pima.te$type == 'Yes']
bp.no <- Pima.te$bp[Pima.te$type == 'No']
par(mfrow=c(2,1))
hist(bp.yes, xlim = c(20,120), ylim = c(0, 0.035), freq = F,
xlab = 'blood pressure', main = 'Diabetic Pima Women')
hist(bp.no, xlim = c(20,120), ylim = c(0, 0.035), freq = F,
xlab = 'blood pressure', main = 'Non-Diabetic Pima Women')
t.test(pim$bp[pim$type=="Yes"],pim$bp[pim$type=="No"], var.equal = TRUE)
t.test(bp ~ type, data = Pima.te)
wilcox.test(pim$bp[pim$type=="Yes"], mu=70)
wilcox.test(pim$bp[pim$type=="Yes"],pim$bp[pim$type=="No"], alternative = 'less')
答案
wilcox.test(pim$bp[pim$type=="Yes"], mu=70)
wilcox.test(pim$bp[pim$type=="Yes"],pim$bp[pim$type=="No"], alternative = 'less')
#答案
wilcox.test(bp ~ type, data = Pima.te)
wilcox.test(pim$bp[pim$type=="Yes"], mu=70)
wilcox.test(pim$bp[pim$type=="Yes"],pim$bp[pim$type=="No"], alternative = 'less')
#答案
wilcox.test(Pima.te$bp, mu = 70)
wilcox.test(bp ~ type, data = Pima.te)
knitr::opts_chunk$set(echo = TRUE)
tmp = c(rep(c('B'), times=2705) , rep(c('G'), times=5235-2705) )
df <- data.frame(id=c(1:5235),sex=tmp)
(prfs = xtabs( ~ sex, data=df))
str(prfs)
chisq.test(prfs)
prop.test(2705,5235,.5,'greater')
binom.test(2705,5235,.5,'greater')
#tab <- matrix(c(7, 5, 14, 19, 3, 2, 17, 6, 12), ncol=3, byrow=TRUE)
tab = matrix(c(2705, 5235-2705,1905,3765-1905),ncol=2,byrow=TRUE)
#boy = c(2705, 1905)
#girl = c(5235-2705,3765-1905)
#label = c("boys","grils")
colnames(tab) = c('boy','girl')
rownames(tab) = c('Comala','Macondo')
#df <- data.frame(labels= label, boys=boy,girls=girl  )
prfs = as.table(tab)
str(prfs)
print(prfs)
chisq.test(prfs)
prop.test(c(2705,1905), c(5235,3765))
knitr::opts_chunk$set(echo = TRUE)
df1  =  read.csv('motorskills.csv')
#boxplot(sp1 ~ DH, ylim = c(0,650), col = 'cornsilk2')
boxplot(sp2 ~ DH,  col = 'cornsilk2')
#boxplot(sp1 ~ DH, ylim = c(0,650), col = 'cornsilk2')
boxplot(sp2 ~ DH,data = df1,  col = 'cornsilk2')
boxplot(sp1 ~ DH,ylim = c(0,1) , data = df1,  col = 'cornsilk2')
boxplot(sp2 ~ DH,  ylim = c(0,1) , data = df1,  col = 'cornsilk2')
boxplot(sp1 ~ DH,ylim = c(0,0.8) , data = df1,  col = 'cornsilk2')
boxplot(sp2 ~ DH,  ylim = c(0,0.8) , data = df1,  col = 'cornsilk2')
View(df1)
View(df1)
View(df1)
View(df1)
sum(DH=='right'); sum(DH=='left')
sum(df1$DH=='right'); sum(df1$DH=='left')
sum(df1$sp1); sum(df1$sp2)
count(df1$sp1); count(df1$sp2)
str(df1$sp1); str(df1$sp2)
t.test(sp1,sp2)
t.test(sp1,sp2,data=df1)
t.test(sp1,sp2,data=df1)
t.test(df1$sp1,df1$sp2)
df1 <- within(df1, dif <- sp1 - sp2 )
boxplot(dif ~ DH,ylim = c(0,0.8) , data = df1,  col = 'cornsilk2')
df1 <- within(df1, dif <- sp1 - sp2 )
boxplot(dif ~ DH,ylim = c(0,0.5) , data = df1,  col = 'cornsilk2')
df1 <- within(df1, dif <- sp1 - sp2 )
boxplot(dif ~ DH,ylim = c(0,0.4) , data = df1,  col = 'cornsilk2')
qqnorm(df1$dif)
qqline(df1$dif)
qqnorm(df1$dif)
qqline(df1$dif)
shapiro.test(data2$dif)
qqnorm(df1$dif)
qqline(df1$dif)
shapiro.test(df1$dif)
View(df1)
View(df1)
t.test(df1$dif[df1$DH == 'right'],
df1$dif[df1$DH == 'left'],
paired = TRUE)
t.test(df1$dif[df1$DH == 'right'],
df1$dif[df1$DH == 'left'])
str(df1$dif[DH=='right']); str(df1$dif[DH=='left'])
str(dif[DH=='right']); str(dif[DH=='left'])
str(df1$dif[df1$DH=='right']); str(df1$dif[df1$DH=='left'])
help(wilcox.test)
wilcox.test(df1$dif[df1$DH == 'right'],df1$dif[df1$DH == 'left'], alternative ='two.sided')
wilcox.test(df1$dif[df1$DH == 'right'],df1$dif[df1$DH == 'left'])
wilcox.test(df1$dif[df1$DH == 'right'],df1$dif[df1$DH == 'left'], alternative ='two.sided')
wilcox.test( df1$sp1,df1$sp2)
df2  =  read.csv('bloodpress.csv')
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
str(df2$BP)
View(df2)
View(df2)
View(df2)
View(df2)
sort()
help (sort)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
sort(df2$BP)
str(df2$BP)
View(df2)
View(df2)
View(df2)
View(df2)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2$BP = sort(df2$BP)
str(df2$BP)
View(df2)
View(df2)
View(df2)
df2  =  read.csv('bloodpress.csv')
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = sort(df2)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = sort(df2,df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = order(df2)
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2  =  read.csv('bloodpress.csv')
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = order(df2)
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2  =  read.csv('bloodpress.csv')
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
#df2 = df2[order(df2$BP)]
#str(df2$BP)
#df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = df2[order(df2$BP)]
View(df2)
View(df2)
View(df2)
View(df2)
#df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = df2[order(BP)]
View(df2)
View(df2)
#df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = df2[order(df2$BP)]
View(df2)
View(df2)
#df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = df2[order(df2$BP),]
str(df2$BP)
View(df2)
View(df2)
View(df2)
View(df2)
boxplot(Age ~ BP,ylim = c(0,0.4) , data = df2,  col = 'cornsilk2')
boxplot(Age ~ BP,ylim = c(0,500) , data = df2,  col = 'cornsilk2')
boxplot(Age ~ BP,ylim = c(0,60) , data = df2,  col = 'cornsilk2')
boxplot(Age ~ BP,ylim = c(0,100) , data = df2,  col = 'cornsilk2')
boxplot(Age ~ BP,ylim = c(0,80) , data = df2,  col = 'cornsilk2')
df2 <- within(df2, cut(human$Salary,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50")) )
df2 <- within(df2, cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50")) )
View(df2)
View(df2)
df2 <- within(df2, fAge = cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50")) )
fAge <- cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50"))
df2 <- within(df2,fAge)
fAge <- cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50"))
df2 <- within(df2,fAge)
View(df2)
View(df2)
df2 <- within(df2, fAge = cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50")) )
View(df2)
View(df2)
df2 = table(df2)
df2 <- within(df2, fAge = cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50") ) )
help(cut)
df2  =  read.csv('bloodpress.csv')
str(df2$BP)
df2$BP <- factor(df2$BP, labels = c('Low','Normal','High'))
df2 = df2[order(df2$BP),]
str(df2$BP)
boxplot(Age ~ BP,ylim = c(0,80) , data = df2,  col = 'cornsilk2')
View(df2)
View(df2)
df2 <- within(df2, fAge <- cut(df2$Age,breaks = c(-Inf,29,49,Inf),labels = c("Under30","30-49","Over50") ) )
View(df2)
View(df2)
(df2tab <- with(df2, table(fAge, BP)))
(df2tab <- with(df2, table(fAge, BP)))
mosaicplot(df2tab, ylab = 'fAge', color = c('cornsilk1','cornsilk2','cornsilk3'),
main = 'fAge according to BP')
help("mosaicplot")
(df2tab <- with(df2, table(BP,fAge)))
mosaicplot(df2tab, ylab = 'fAge', color = c('cornsilk1','cornsilk2','cornsilk3'),
main = 'fAge according to BP')
(df2tab <- with(df2, table(BP,fAge)))
mosaicplot(df2tab, color = c('cornsilk1','cornsilk2','cornsilk3'),
main = 'fAge according to BP')
prop.table(q2.tbl,1)
prop.table(df2tab,1)
prop.table(df2tab,1)
prop.table(df2tab,2)
colSums(prop.table(df2tab))%*%t(rowSums(prop.table(df2tab))) *321
chisq.test(df2tab)
fisher.test(df2tab)
df3  =  read.csv('migraine.csv')
str(df3)
df3  =  read.csv('migraine.csv')
str(df3)
df2$BP <- as.factor(df2$BP)
df3  =  read.csv('migraine.csv')
str(df3)
df3$Drug <- as.factor(df3$Drug)
boxplot(Pain~Drug,data = df3 )
boxplot(Pain~Drug,data = df3)
points(Pain ~ jitter(Drug, amount = 0.05), data = df3, pch = 16, col = 'blue')
boxplot(Pain~Drug,data = df3)
points(Pain ~ jitter(Drug), data = df3, pch = 16, col = 'blue')
boxplot(Pain~Drug,data = df3)
points(Pain ~ Drug, data = df3, pch = 16, col = 'blue')
boxplot(Pain~Drug,data = df3)
points(Pain ~ Drug, data = df3, pch = 32, col = 'blue')
boxplot(Pain~Drug,data = df3)
points(Pain ~ Drug, data = df3, pch = 16, col = 'blue')
boxplot(Pain~Drug,data = df3)
#points(Pain ~ Drug, data = df3, pch = 16, col = 'blue')
points(Pain ~ Drug)
boxplot(Pain~Drug,data = df3)
#points(Pain ~ Drug, data = df3, pch = 16, col = 'blue')
points(Pain ~ Drug, data = df3)
boxplot(Pain~Drug,data = df3)
points(Pain ~ Drug, data = df3, pch = 16, col = 'blue')
View(df3)
View(df3)
View(df3)
View(df3)
fit1 <- lm(Pain~Drug, data=df3)
str(fit1)
fit1 <- lm(Pain~Drug, data=df3)
#str(fit1)
summary(fit1)
fit1 <- lm(Pain~Drug, data=df3)
#str(fit1)
summary(fit1)
summary(fit1)
help(lm)
fit1 <- lm(Pain~Drug, data=df3)
str(fit1)
fit1 <- lm(Pain~Drug, data=df3)
summary(fit1)
summary(fit1)
(means <- model.tables(fit1, 'means', se = TRUE))
summary(fit1)
model.tables(fit1, se = TRUE)
help(lm)
fit1 <- lm(Pain~Drug, data=df3)
#summary(fit1)
print(fit1)
summary(fit1)
model.tables(fit1, se = TRUE)
fit1 <- lm(Pain~Drug, data=df3)
summary(fit1)
summary(fit1)
print(fit1)
help(lm)
fit1 <- lm(Pain~Drug, data=df3)
anova(fit1)
fit1 <- lm(Pain~Drug, data=df3)
anova(fit1)
summary(fit1)
summary(fit1)
print(fit1)
par(mfrow = c(2,2))
plot(fit1)
par(mfrow = c(2,2))
plot(fit1)
par(mfrow=c(1,1))
Va = 0.7685
sqrt(Va)
