demo()
pbinom(3,10,0.4,lower.tail = T)
str(mtcars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
getwd()
ls
cd Desktop
setwd(/Users/linj/Desktop/stat210/problemlist)
setwd("/Users/linj/Desktop/stat210/problemlist")
getwd()
ls
ls()
ls
getwd()
ls()
getwd()
setwd()
ls()
getwd()
ls()
sd
data()
data(cars)
plot(cars)
head(cars)
str(cars)
2+3; 5*4
var
3 /2;
3 %/%2;
ls()
rm(a)
a <- 12
ls()
rm(a)
ls()
rm(list=ls())
ls()
help(log)
ï¼Ÿlm
?lm
?'*'
help(truhist)
help(truehist)
help(??truehist)
??truehist
knitr::opts_chunk$set(echo = TRUE)
mat1 <- matrix(c(3,2,2,4,2,1,1,0,2,0,5,5,6,2,2,1), nrow=4, ncol=4, byrow=TRUE);
vec1 <- matrix(c(28,14,28,37),nr=4,nc=1)
mat2 <- solve(mat1)
list1 <- list(item1= mat1, item2=vec1,item3=mat2)
mode(list1[[1]])
mode(list1[1])
mode(list1[[2]])
mode(list1[2])
rm(mat1,vec1,mat2)
vec2 <- solve(list1[[1]], list1[[2]])
print(list1[[2]] - list1[[1]] %*% matrix(vec2) )
print(vec2 - list1[[3]] %*%  list1[[2]] )
mat1eigen <- eigen(list1[[1]])
mat2eigen <- eigen(list1[[3]])
m2v <- mat2eigen$values
m1v <- mat1eigen$values
print( rev(m1v) *m2v  )
sigmoid <- function(x) exp(-abs(x))
curve(sigmoid,-2,2)
x <- runif(1000,-2,2)
y <- runif(1000,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
I1000 <- recarea*asum/1000
print(I1000)
tmp <- integrate(sigmoid, lower = -2, upper = 2)
I <- tmp[[1]]
abs(I - I1000)
results = list(abs(I - I1000))
summary(results)
for (k in 4:8){
x <- runif(10^k,-2,2)
y <- runif(10^k,0,1)
z <- exp(-abs(x))
asum <- sum(as.numeric(y<z))
recarea <- 4
result <- 4*asum/10^k
I <- tmp[[1]]
print(abs(I - result))
results <- append(results, abs(I - result))
}
l =c(3:8)
myFun=function(x){10^x}
lis <- lapply(l,myFun)
a = as.vector(unlist(lis))
b = as.vector(unlist(results))
df <- data.frame(x=a, y=b)
plot(log(df$x), log(df$y), main='Log-Log Plot')
